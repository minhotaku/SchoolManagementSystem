@model SchoolManagementSystem.Models.FacultyEditViewModel
@{
    ViewData["Title"] = "Edit Faculty";
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">@* Breadcrumb *@</nav>
    @if (Model != null)
    {
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-7">
                <div class="card shadow-sm">
                    <div class="card-header bg-success text-white"><h4 class="mb-0">@ViewData["Title"]</h4></div>
                    <div class="card-body">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger...">@TempData["ErrorMessage"]</div>
                        }

                        <form asp-action="Edit" asp-route-id="@Model.FacultyId" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" asp-for="UserId" />
                            <input type="hidden" asp-for="FacultyId" /> @* Needed for id matching check *@

                            <div class="mb-3">
                                @* FacultyId Readonly *@
                                <label asp-for="FacultyId" class="form-label fw-bold">Faculty ID</label>
                                <input asp-for="FacultyId" class="form-control bg-light" readonly />
                            </div>
                            <div class="mb-3">
                                @* Username *@
                                <label asp-for="Username" class="form-label fw-bold required">Username</label>
                                <input asp-for="Username" class="form-control" />
                                <span asp-validation-for="Username" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                @* Password *@
                                <label asp-for="Password" class="form-label fw-bold">Password</label>
                                <input asp-for="Password" class="form-control" placeholder="Leave blank if no change" />
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <hr />
                            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                <a asp-action="Index" class="btn btn-outline-secondary me-md-2">
                                    @* Cancel Button *@
                                    <i class="bi bi-x-circle me-1"></i> Cancel
                                </a>
                                <button type="submit" class="btn btn-danger">
                                    @* Save Button *@
                                    <i class="bi bi-save me-1"></i> Save
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-danger">Unable to load information for editing. Data not found.</div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i> Back to List
        </a>
    }
</div>

@section Styles {
    <style>
        .required::after {
            content: " *";
            color: yellow;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Show/Hide password
        document.getElementById('togglePassword')?.addEventListener('click', function () {
            var passwordField = document.getElementById('Password');
            var icon = this.querySelector('i');
            var fieldType = passwordField.getAttribute('type');
            if (fieldType === 'password') {
                passwordField.setAttribute('type', 'text');
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                 passwordField.setAttribute('type', 'password');
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

         // Handle form validation on submit
         document.querySelector('form').addEventListener('submit', function(event) {
              if (!this.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
              }
              this.classList.add('was-validated');
         });
    </script>
}