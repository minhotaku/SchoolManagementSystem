@model SchoolManagementSystem.Models.UserEditViewModel
@{
    ViewData["Title"] = "Edit User";
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="AdminUserManagement" asp-action="Index">User Management</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]: @Model.Username</li>
        </ol>
    </nav>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-7">
            <div class="card shadow-sm">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="bi bi-pencil-square me-2"></i>@ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    @* Display aggregate validation errors *@
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                    @* Display error message from TempData *@
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-controller="AdminUserManagement" asp-action="Edit" asp-route-id="@Model.UserId" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="UserId" />
                        <input type="hidden" asp-for="CurrentRole" /> @* Send back current role *@

                        <div class="mb-3">
                            <label class="form-label fw-bold">User ID</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                                <input type="text" class="form-control bg-light" value="@Model.UserId" readonly />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Username" class="form-label fw-bold required"></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <input asp-for="Username" class="form-control" />
                            </div>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Role" class="form-label fw-bold"></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person-check-fill"></i></span>
                                <input asp-for="Role" class="form-control bg-light" readonly />
                            </div>
                            <div class="form-text">Role cannot be changed after creation.</div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Password" class="form-label fw-bold"></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <input asp-for="Password" class="form-control" placeholder="Leave empty if you don't want to change" />
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword" title="Show/Hide password">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>

                        @* Only display School Program field if user is a Student *@
                        @if (Model.CurrentRole.Equals("Student", StringComparison.OrdinalIgnoreCase))
                        {
                            <div class="mb-4" id="programField">
                                <label asp-for="SchoolProgramId" class="form-label fw-bold required"></label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-mortarboard"></i></span>
                                    <select asp-for="SchoolProgramId" class="form-select" asp-items="@ViewBag.SchoolPrograms">
                                        <option value="" selected disabled>-- Select School Program --</option>
                                    </select>
                                </div>
                                <span asp-validation-for="SchoolProgramId" class="text-danger"></span>
                            </div>
                        }

                        <hr />

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-outline-secondary me-md-2">
                                @* Cancel Button *@
                                <i class="bi bi-x-circle me-1"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-danger">
                                @* Save Button *@
                                <i class="bi bi-save me-1"></i> Save
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .required::after {
            content: " *";
            color: yellow;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Show/Hide password
        document.getElementById('togglePassword')?.addEventListener('click', function () {
            var passwordField = document.getElementById('Password');
            var icon = this.querySelector('i');
            var fieldType = passwordField.getAttribute('type');
            if (fieldType === 'password') {
                passwordField.setAttribute('type', 'text');
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                 passwordField.setAttribute('type', 'password');
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

         // Handle form submit validation
         document.querySelector('form').addEventListener('submit', function(event) {
              if (!this.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
              }
              this.classList.add('was-validated');
         });
    </script>
}