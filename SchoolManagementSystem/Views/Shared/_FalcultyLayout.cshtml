<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - School Management System</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/faculty.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
    <style>
        /* Custom styles for faculty layout */
        :root {
            --sidebar-width: 280px;
            --topbar-height: 60px;
            --primary-color: #3498db;
            --secondary-color: #2980b9;
            --success-color: #27ae60;
            --info-color: #2980b9;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --dark-color: #2c3e50;
            --light-color: #ecf0f1;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f7fa;
        }

        /* Sidebar styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100%;
            width: var(--sidebar-width);
            background-color: var(--dark-color);
            color: white;
            z-index: 1000;
            transition: all 0.3s;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            overflow-y: auto;
        }

        .sidebar-header {
            padding: 15px 20px;
            background-color: var(--secondary-color);
            height: var(--topbar-height);
            display: flex;
            align-items: center;
        }

        .sidebar-content {
            padding: 15px 0;
        }

        .sidebar .nav-link {
            color: rgba(255, 255, 255, 0.8);
            padding: 12px 20px;
            display: flex;
            align-items: center;
            transition: all 0.3s;
            border-left: 4px solid transparent;
        }

            .sidebar .nav-link i {
                margin-right: 15px;
                font-size: 1.2rem;
                min-width: 25px;
                text-align: center;
            }

            .sidebar .nav-link:hover,
            .sidebar .nav-link.active {
                color: white;
                background-color: rgba(255, 255, 255, 0.1);
                border-left: 4px solid var(--primary-color);
            }

        .sidebar .nav-divider {
            height: 1px;
            margin: 10px 20px;
            background-color: rgba(255, 255, 255, 0.1);
        }

        .sidebar-section-title {
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: rgba(255, 255, 255, 0.5);
            padding: 15px 20px 5px;
            margin: 0;
        }

        /* Main content styles */
        .main-content {
            margin-left: var(--sidebar-width);
            padding: 20px;
            min-height: calc(100vh - var(--topbar-height));
        }

        /* Topbar styles */
        .topbar {
            position: fixed;
            top: 0;
            left: var(--sidebar-width);
            right: 0;
            height: var(--topbar-height);
            background-color: white;
            z-index: 999;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            padding: 0 20px;
            justify-content: space-between;
        }

        .page-title {
            font-weight: 500;
            color: var(--dark-color);
        }

        /* Content container */
        .content-container {
            padding-top: calc(var(--topbar-height) + 20px);
            padding-bottom: 20px;
        }

        /* Cards */
        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
            transition: transform 0.2s, box-shadow 0.2s;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            font-weight: 500;
            padding: 15px 20px;
            border-radius: 10px 10px 0 0 !important;
        }

        /* Responsive sidebar */
        @@media (max-width: 992px) {
            .sidebar

        {
            transform: translateX(-100%);
        }

        .sidebar.show {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .topbar {
            left: 0;
        }

        .mobile-menu-toggle {
            display: block !important;
        }

        }

        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            color: var(--dark-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        /* Footer */
        .footer {
            margin-left: var(--sidebar-width);
            padding: 15px 20px;
            text-align: center;
            background-color: white;
            border-top: 1px solid rgba(0, 0, 0, 0.05);
        }

        @@media (max-width: 992px) {
            .footer

        {
            margin-left: 0;
        }

        }

        /* User profile in sidebar */
        .user-profile {
            padding: 20px;
            display: flex;
            align-items: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
            font-weight: bold;
            text-transform: uppercase; /* Để hiển thị chữ cái đầu in hoa */
        }

        .user-info {
            flex: 1;
        }

        .user-name {
            font-weight: 500;
            margin: 0;
            color: white;
        }

        .user-role {
            font-size: 0.8rem;
            color: rgba(255, 255, 255, 0.6);
            margin: 0;
        }

        /* Mobile responsive CSS (thêm mới) */
        @@media (max-width: 768px) {
            /* Điều chỉnh kích thước tiêu đề trên cùng cho mobile */
            .topbar .page-title

        {
            font-size: 1.25rem; /* Giảm kích thước font cho tiêu đề trên mobile */
        }

        .sidebar-header h5 {
            font-size: 1rem; /* Giảm kích thước font cho tiêu đề sidebar */
        }

        /* Điều chỉnh topbar để phù hợp với màn hình nhỏ */
        .topbar {
            height: auto;
            min-height: var(--topbar-height);
            padding: 10px 15px;
            flex-wrap: wrap;
        }

        /* Ẩn thông tin thời gian trên điện thoại cực nhỏ */
        @@media (max-width: 480px) {
            #currentDateTime

        {
            display: none;
        }

        .topbar {
            padding: 8px 12px;
        }

        }

        /* Tăng kích thước của nút toggle sidebar để dễ bấm hơn */
        .mobile-menu-toggle {
            font-size: 1.75rem;
            padding: 5px;
        }

        /* Điều chỉnh padding cho các phần nội dung */
        .content-container {
            padding: calc(var(--topbar-height) + 10px) 10px 10px;
        }

        /* Cải thiện khả năng đọc và tương tác trên màn hình cảm ứng */
        .nav-link {
            padding: 12px 15px;
        }

            .nav-link i {
                margin-right: 10px;
                font-size: 1.1rem;
            }

        /* Tăng kích thước các điểm chạm cho thiết bị cảm ứng */
        form button.nav-link,
        .nav-link {
            min-height: 44px; /* Đảm bảo kích thước tối thiểu cho các điểm chạm */
        }

        }

        /* Sửa lỗi đè lên trên nội dung khi sidebar mở trên mobile */
        @@media (max-width: 992px) {
            .sidebar.show

        {
            z-index: 1001; /* Đảm bảo sidebar hiển thị trên cùng khi được mở */
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
        }

        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h5 class="m-0"><i class="bi bi-mortarboard-fill me-2"></i>Faculty Management</h5>
        </div>

        @{
            // Lấy dữ liệu từ Session
            var currentUsername = Context.Session.GetString("_Username");
            // var currentUserId = Context.Session.GetString("_UserId"); // Giữ lại nếu bạn cần UserId ở đâu đó
            var currentUserRole = Context.Session.GetString("_UserRole");

            // Chuẩn bị giá trị hiển thị (có thể thêm fallback nếu session null)
            var displayUsername = currentUsername ?? "Khách"; // Nếu null, hiển thị "Khách"
            var displayUserRole = currentUserRole ?? "N/A";     // Nếu null, hiển thị "N/A"

            // Lấy chữ cái đầu tiên của username cho avatar (kiểm tra null/empty)
            var avatarLetter = !string.IsNullOrEmpty(displayUsername) && displayUsername != "Khách"
            ? displayUsername.Substring(0, 1)
            : "?";
        }

        <!-- User Profile -->
        <div class="user-profile">
            <div class="user-avatar">
                @* Hiển thị chữ cái đầu của username *@
                @avatarLetter
            </div>
            <div class="user-info">
                @* Hiển thị username từ session *@
                <h6 class="user-name">@displayUsername</h6>
                @* Hiển thị role từ session *@
                <p class="user-role">@displayUserRole</p>
            </div>
        </div>

        <!-- Navigation Links -->
        <div class="sidebar-content">
            <h6 class="sidebar-section-title">Home</h6>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "Faculty" && ViewContext.RouteData.Values["action"].ToString() == "Index" ? "active" : "")"
                       asp-controller="Faculty" asp-action="Index">
                        <i class="bi bi-speedometer2"></i>Dashboard
                    </a>
                </li>
            </ul>

            <h6 class="sidebar-section-title">Report</h6>
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link @(ViewContext.RouteData.Values["controller"].ToString() == "TeachingReport" ? "active" : "")"
                       asp-controller="TeachingReport" asp-action="Index">
                        <i class="bi bi-file-earmark-text"></i>Teaching Report
                    </a>
                </li>
            </ul>

            <div class="nav-divider"></div>

            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link" href="#" id="helpLink">
                        <i class="bi bi-question-circle"></i>Help
                    </a>
                </li>
                <li class="nav-item">
                    <form asp-controller="Account" asp-action="Logout" method="post" id="logoutForm">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="nav-link border-0 bg-transparent w-100 text-start">
                            <i class="bi bi-box-arrow-right"></i>Logout
                        </button>
                    </form>
                </li>
            </ul>
        </div>
    </div>

    <!-- Topbar -->
    <div class="topbar">
        <button class="mobile-menu-toggle" id="sidebarToggle">
            <i class="bi bi-list"></i>
        </button>

        <h4 class="page-title m-0">@ViewData["Title"]</h4>

        <div>
            <span id="currentDateTime" class="text-muted"></span> <!-- Sẽ được cập nhật bằng JS -->
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <div class="content-container">
            @RenderBody()
        </div>
    </div>

    <!-- Footer -->
    <footer class="footer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-6 text-center text-md-start">
                    © @DateTime.Now.Year - School Management System
                </div>
                <div class="col-md-6 text-center text-md-end">
                    <a href="#">Privacy Policy</a> | <a href="#">Terms of Use</a>
                </div>
            </div>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/faculty.js" asp-append-version="true"></script>

    <script>
        // Toggle mobile sidebar
        document.getElementById('sidebarToggle').addEventListener('click', function() {
            document.querySelector('.sidebar').classList.toggle('show');
        });

        // Update current date time
        function updateCurrentTime() {
            const now = new Date();
            // Format: YYYY-MM-DD HH:mm:ss (Adjust format as needed)
            const year = now.getFullYear();
            const month = (now.getMonth() + 1).toString().padStart(2, '0');
            const day = now.getDate().toString().padStart(2, '0');
            const hours = now.getHours().toString().padStart(2, '0');
            const minutes = now.getMinutes().toString().padStart(2, '0');
            const seconds = now.getSeconds().toString().padStart(2, '0');
            const formattedDate = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;

            const timeElement = document.getElementById('currentDateTime');
            if(timeElement) {
                timeElement.textContent = formattedDate;
            }
        }
        // Run initially and update every second
        updateCurrentTime(); // Run once on load
        setInterval(updateCurrentTime, 1000); // Update every second

        // Help modal
        document.getElementById('helpLink').addEventListener('click', function(e) {
            e.preventDefault();
            // Add code to show help modal or redirect to help page
            alert('Help feature is under development.');
        });

        // Active link based on current route (already handled by Razor syntax)
        document.addEventListener('DOMContentLoaded', function() {
            // Additional JavaScript can be added here if needed
             // Make footer year dynamic
             const footerYearElement = document.querySelector('.footer .text-md-start');
             if (footerYearElement) {
                 footerYearElement.textContent = `© ${new Date().getFullYear()} - School Management System`;
             }
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>