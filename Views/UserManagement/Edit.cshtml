@model SchoolManagementSystem.Entities.User
@{
    ViewData["Title"] = "Edit User";
    // Current date and time: 2025-03-27 15:22:04
    // Current user: minhotaku
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="breadcrumb-item"><a asp-action="Index">User Management</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Edit User</li>
                </ol>
            </nav>

            <div class="card shadow">
                <div class="card-header bg-info text-white">
                    <h4 class="mb-0"><i class="bi bi-pencil-square me-2"></i>Edit User</h4>
                </div>
                <div class="card-body">
                    @if (TempData["ErrorMessage"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    <form asp-action="Edit" method="post">
                        <input type="hidden" asp-for="UserId" />
                        <input type="hidden" asp-for="Role" />
                        <input type="hidden" asp-for="PasswordHash" />

                        <div class="mb-3">
                            <label class="form-label fw-bold">User ID</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                                <input type="text" class="form-control bg-light" value="@Model.UserId" readonly />
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="Username" class="form-label fw-bold required">Username</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <input asp-for="Username" class="form-control" required />
                            </div>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label class="form-label fw-bold">Role</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person-badge"></i></span>
                                <input type="text" class="form-control bg-light" value="@Model.Role" readonly />
                            </div>
                            <div class="form-text">Role cannot be changed after creation.</div>
                        </div>

                        <div class="mb-4">
                            <label for="newPassword" class="form-label fw-bold">New Password</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <input type="password" id="newPassword" name="newPassword" class="form-control"
                                       placeholder="Leave blank to not change" />
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            <div class="form-text">Fill in only if you want to change the password.</div>
                        </div>

                        <div class="mb-3 form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="confirmUpdate">
                            <label class="form-check-label" for="confirmUpdate">
                                I confirm to change the information of this user
                            </label>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-info text-white" id="updateButton" disabled>
                                <i class="bi bi-save me-2"></i>Save Changes
                            </button>
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-2"></i>Back
                            </a>
                        </div>
                    </form>
                </div>
                <div class="card-footer bg-light">
                    <div class="d-flex justify-content-between align-items-center">
                        <small class="text-muted">ID: @Model.UserId</small>
                        <small class="text-muted">Last updated: @DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .required::after {
            content: " *";
            color: red;
        }

        .card {
            border: none;
            border-radius: 10px;
        }

        .card-header {
            border-radius: 10px 10px 0 0 !important;
        }

        .card-footer {
            border-radius: 0 0 10px 10px !important;
        }
    </style>
}

@section Scripts {
    <script>
        // Handle show/hide password button
        document.getElementById('togglePassword').addEventListener('click', function () {
            var passwordField = document.getElementById('newPassword');
            var icon = this.querySelector('i');

            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                passwordField.type = 'password';
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        });

        // Handle confirmation checkbox
        document.getElementById('confirmUpdate').addEventListener('change', function() {
            document.getElementById('updateButton').disabled = !this.checked;
        });
    </script>
}